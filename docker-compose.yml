version: '3.9'

services:

  db:
    container_name: db
    hostname: db
    image: postgres:latest
    ports:
      - "5432:5432"
    expose:
      - 5432
    healthcheck:
      test: ["CMD", "pg_isready -U ${DB_USER:-pguser} -d ${DB_NAME:-rms}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    env_file:
      - .env
    environment:
      POSTGRES_HOST: ${DB_HOST:-db}
      POSTGRES_PORT: ${DB_PORT:-5432}
      POSTGRES_USER: ${DB_USER:-pguser}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-pgpwd}
      POSTGRES_DB: ${DB_NAME:-rms}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    restart: always

  api:
    container_name: api
    hostname: api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    expose:
      - 3000
    env_file:
      - .env
    environment:
      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-5432}
      DB_USER: ${DB_USER:-pguser}
      DB_PASSWORD: ${DB_PASSWORD:-pgpwd}
      DB_NAME: ${DB_NAME:-rms}
    restart: always
    depends_on:
      - db

  # sonarqube:
  #   container_name: sonarqube
  #   hostname: sonarqube
  #   image: sonarqube
  #   ports:
  #     - "9000:9000"
  #     - "9092:9092"
  #   expose:
  #     - 9000
  #   networks:
  #     - default
  #   depends_on:
  #     - db

volumes:
  postgres:
