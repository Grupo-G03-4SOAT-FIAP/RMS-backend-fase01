version: '3.9'

services:

  db:
    container_name: db
    hostname: db
    image: postgres:16.1
    ports:
      - "5432:5432"
    expose:
      - 5432
    healthcheck:
      test: ["CMD", "pg_isready -U ${DB_USER:-pguser} -d ${DB_NAME:-rms}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USERNAME:-pguser}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-pgpwd}
      POSTGRES_DB: ${DB_NAME:-rms}
      PGDATA: /data/postgres
      ACCESS_TOKEN_MERCADOPAGO: 
      USER_ID_MERCADOPAGO: 
      EXTERNAL_POS_ID_MERCADOPAGO: 
      WEBHOOK_URL_MERCADOPAGO: 
      IDEMPOTENCY_KEY_MERCADOPAGO: 
    volumes:
      - postgres:/data/postgres
    restart: always
    networks:
      - default

  api:
    container_name: api
    hostname: api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    expose:
      - 3000
    env_file:
      - .env
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${DB_USERNAME:-pguser}
      DB_PASSWORD: ${DB_PASSWORD:-pgpwd}
      DB_NAME: ${DB_NAME:-rms}
    restart: always
    networks:
      - default
    depends_on:
      - db

networks:
  default:
    driver: bridge

volumes:
  postgres:
